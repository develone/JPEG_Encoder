# ELBREAD: Elaboration process.
# ELBREAD: Warning: Module 'jpeg_enc_mem' does not have a `timescale directive, but previous modules do.
# ELBREAD: Warning: Module 'jpeg_enc_dct' does not have a `timescale directive, but previous modules do.
# ELBREAD: Elaboration time 0.2 [s].
asim -O5 +access +r jpeg_enc_tb
# ELBREAD: Elaboration process.
# ELBREAD: Warning: Module 'jpeg_enc_mem' does not have a `timescale directive, but previous modules do.
# ELBREAD: Warning: Module 'jpeg_enc_dct' does not have a `timescale directive, but previous modules do.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# KERNEL: Time resolution set to 1ns.
# ELAB2: Elaboration final pass...
# KERNEL: PLI/VHPI kernel's engine initialization done.
# PLI: Loading library 'D:\APPS\lscc\diamond\3.10_x64\active-hdl\bin\systf.dll'
# ELAB2: Create instances ...
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Finished. Using existing simulator library
# SLP: 0 primitives and 98 (100.00%) other processes in SLP
# SLP: 196 (93.33%) signals in SLP and 13 (6.19%) interface signals
# ELAB2: Elaboration final pass complete - time: 1.0 [s].
# KERNEL: SLP loading done - time: 0.3 [s].
# KERNEL: Warning: You are using the Active-HDL Lattice Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.1 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 10335 kB (elbread=1280 elab2=8902 kernel=152 sdf=0)
# KERNEL: ASDB file was created in location e:\upwork\gnarly_grey\GitHub\JPEG_Encoder\rtl_conversion\sim\jpeg_enc_synrtl\jpeg_enc_synrtl\jpeg_enc_synrtl\src\wave.asdb
#  10:36, 11 April 2018
#  Simulation has been initialized
# add wave -noreg {/jpeg_enc_tb/dut/img_out_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg_fl}
# add wave -noreg {/jpeg_enc_tb/dut/img_done_reg}
# add wave -noreg {/jpeg_enc_tb/dut/byte_count}
# add wave -noreg {/jpeg_enc_tb/dut/header_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/du_ram_we}
# add wave -noreg {/jpeg_enc_tb/dut/du_ram_aw}
# add wave -noreg {/jpeg_enc_tb/dut/QNT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_sel}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_idx}
# add wave -noreg {/jpeg_enc_tb/dut/dct_idx_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/DCY}
# add wave -noreg {/jpeg_enc_tb/dut/DCU}
# add wave -noreg {/jpeg_enc_tb/dut/DCV}
# add wave -noreg {/jpeg_enc_tb/dut/diff_DC}
# add wave -noreg {/jpeg_enc_tb/dut/zzdu_ram_we}
# add wave -noreg {/jpeg_enc_tb/dut/zzdu_ram_ar}
# add wave -noreg {/jpeg_enc_tb/dut/dcht_bc_rom_a}
# add wave -noreg {/jpeg_enc_tb/dut/dcht_bb_rom_a}
# add wave -noreg {/jpeg_enc_tb/dut/acht_bc_rom_a}
# add wave -noreg {/jpeg_enc_tb/dut/acht_bb_rom_a}
# add wave -noreg {/jpeg_enc_tb/dut/img_x}
# add wave -noreg {/jpeg_enc_tb/dut/img_col}
# add wave -noreg {/jpeg_enc_tb/dut/img_y}
# add wave -noreg {/jpeg_enc_tb/dut/img_row}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done_fl}
# add wave -noreg {/jpeg_enc_tb/dut/qz_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/c_state}
# add wave -noreg {/jpeg_enc_tb/dut/n_state}
# add wave -noreg {/jpeg_enc_tb/dut/b_state}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr_reg}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bc_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_c}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_mask}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/end0pos}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac0}
# add wave -noreg {/jpeg_enc_tb/dut/ac_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/last_du}
# add wave -noreg {/jpeg_enc_tb/dut/last_du_p}
# add wave -noreg {/jpeg_enc_tb/dut/header_tx_done}
# add wave -noreg {/jpeg_enc_tb/dut/inc_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/rst_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/col_max}
# add wave -noreg {/jpeg_enc_tb/dut/row_max}
# add wave -noreg {/jpeg_enc_tb/dut/inc_row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done}
# add wave -noreg {/jpeg_enc_tb/dut/dct_done}
# add wave -noreg {/jpeg_enc_tb/dut/qz_done}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_zero}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_neg}
# add wave -noreg {/jpeg_enc_tb/dut/bit_cnt_gte_8}
# add wave -noreg {/jpeg_enc_tb/dut/byte_out_eq_255}
# add wave -noreg {/jpeg_enc_tb/dut/check_next_element}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_zero}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt_gte_16}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_ne_63}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac_neg}
# add wave -noreg {/jpeg_enc_tb/dut/last_comp}
# add wave -noreg {/jpeg_enc_tb/dut/du_ram_do}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/zzidx_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/zzdu_ram_do}
# add wave -noreg {/jpeg_enc_tb/dut/dcht_bc_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/acht_bc_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/dcht_bb_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/acht_bb_rom_d}
# add wave -noreg {/jpeg_enc_tb/dut/start_dct}
# add wave -noreg {/jpeg_enc_tb/dut/du_ram_a_dct}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_aw}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_ar_dct}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_ar}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_we}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_di}
# add wave -noreg {/jpeg_enc_tb/dut/dctdu_ram_do}
# add wave -noreg {/jpeg_enc_tb/dut/clk}
# add wave -noreg {/jpeg_enc_tb/dut/reset_n}
# add wave -noreg {/jpeg_enc_tb/dut/conv_en}
# add wave -noreg {/jpeg_enc_tb/dut/fb_data}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr}
# add wave -noreg {/jpeg_enc_tb/dut/img_out}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid}
# add wave -noreg {/jpeg_enc_tb/dut/img_done}
# 102 signal(s) traced.
# Waveform file 'untitled.awc' connected to 'e:/upwork/gnarly_grey/GitHub/JPEG_Encoder/rtl_conversion/sim/jpeg_enc_synrtl/jpeg_enc_synrtl/jpeg_enc_synrtl/src/wave.asdb'.
run 100 us
# KERNEL: stopped at time: 100 us
endsim
# VSIM: Simulation has finished.
