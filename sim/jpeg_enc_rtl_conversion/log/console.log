# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
asim -O5 +access +r jpeg_enc_tb
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# KERNEL: Time resolution set to 1ns.
# ELAB2: Elaboration final pass...
# KERNEL: PLI/VHPI kernel's engine initialization done.
# PLI: Loading library 'D:\APPS\lscc\diamond\3.10_x64\active-hdl\bin\systf.dll'
# ELAB2: Create instances ...
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 2.0 [s]
# SLP: Finished : 2.1 [s]
# SLP: 0 primitives and 54 (100.00%) other processes in SLP
# SLP: 110 (87.30%) signals in SLP and 16 (12.70%) interface signals
# ELAB2: Elaboration final pass complete - time: 3.1 [s].
# KERNEL: SLP loading done - time: 0.1 [s].
# KERNEL: Warning: You are using the Active-HDL Lattice Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 10305 kB (elbread=1280 elab2=8873 kernel=151 sdf=0)
# KERNEL: ASDB file was created in location e:\upwork\gnarly_grey\received\jpeg_encoder\rtl_conversion\sim\jpeg_enc_rtl_conversion\src\wave.asdb
#  14:03, 13 March 2018
#  Simulation has been initialized
# add wave -noreg {/jpeg_enc_tb/dut/img_out_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_done_reg}
# add wave -noreg {/jpeg_enc_tb/dut/byte_count}
# add wave -noreg {/jpeg_enc_tb/dut/YDU}
# add wave -noreg {/jpeg_enc_tb/dut/UDU}
# add wave -noreg {/jpeg_enc_tb/dut/VDU}
# add wave -noreg {/jpeg_enc_tb/dut/DCT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/ZIG_DU}
# add wave -noreg {/jpeg_enc_tb/dut/QNT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/tmp0}
# add wave -noreg {/jpeg_enc_tb/dut/tmp1}
# add wave -noreg {/jpeg_enc_tb/dut/tmp2}
# add wave -noreg {/jpeg_enc_tb/dut/tmp3}
# add wave -noreg {/jpeg_enc_tb/dut/tmp4}
# add wave -noreg {/jpeg_enc_tb/dut/tmp5}
# add wave -noreg {/jpeg_enc_tb/dut/tmp6}
# add wave -noreg {/jpeg_enc_tb/dut/tmp7}
# add wave -noreg {/jpeg_enc_tb/dut/tmp10}
# add wave -noreg {/jpeg_enc_tb/dut/tmp11}
# add wave -noreg {/jpeg_enc_tb/dut/tmp12}
# add wave -noreg {/jpeg_enc_tb/dut/tmp13}
# add wave -noreg {/jpeg_enc_tb/dut/tmp20}
# add wave -noreg {/jpeg_enc_tb/dut/tmp21}
# add wave -noreg {/jpeg_enc_tb/dut/tmp22}
# add wave -noreg {/jpeg_enc_tb/dut/z1}
# add wave -noreg {/jpeg_enc_tb/dut/z2}
# add wave -noreg {/jpeg_enc_tb/dut/z3}
# add wave -noreg {/jpeg_enc_tb/dut/z4}
# add wave -noreg {/jpeg_enc_tb/dut/z5}
# add wave -noreg {/jpeg_enc_tb/dut/z11}
# add wave -noreg {/jpeg_enc_tb/dut/z13}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_sel}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_idx}
# add wave -noreg {/jpeg_enc_tb/dut/dct_idx_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/DCY}
# add wave -noreg {/jpeg_enc_tb/dut/DCU}
# add wave -noreg {/jpeg_enc_tb/dut/DCV}
# add wave -noreg {/jpeg_enc_tb/dut/diff_DC}
# add wave -noreg {/jpeg_enc_tb/dut/img_x}
# add wave -noreg {/jpeg_enc_tb/dut/img_col}
# add wave -noreg {/jpeg_enc_tb/dut/img_y}
# add wave -noreg {/jpeg_enc_tb/dut/img_row}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done_fl}
# add wave -noreg {/jpeg_enc_tb/dut/qz_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/c_state}
# add wave -noreg {/jpeg_enc_tb/dut/n_state}
# add wave -noreg {/jpeg_enc_tb/dut/b_state}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr_reg}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bc_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_c}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_mask}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/end0pos}
# add wave -noreg {/jpeg_enc_tb/dut/du_e0p}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac0}
# add wave -noreg {/jpeg_enc_tb/dut/ac_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/last_du}
# add wave -noreg {/jpeg_enc_tb/dut/last_du_p}
# add wave -noreg {/jpeg_enc_tb/dut/header_rom}
# add wave -noreg {/jpeg_enc_tb/dut/ydc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvdc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/yac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/zigzag_idx}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_Y}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_UV}
# add wave -noreg {/jpeg_enc_tb/dut/header_tx_done}
# add wave -noreg {/jpeg_enc_tb/dut/inc_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/rst_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/col_max}
# add wave -noreg {/jpeg_enc_tb/dut/row_max}
# add wave -noreg {/jpeg_enc_tb/dut/inc_row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done}
# add wave -noreg {/jpeg_enc_tb/dut/dct_done}
# add wave -noreg {/jpeg_enc_tb/dut/qz_done}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_zero}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_neg}
# add wave -noreg {/jpeg_enc_tb/dut/bit_cnt_gte_8}
# add wave -noreg {/jpeg_enc_tb/dut/byte_out_eq_255}
# add wave -noreg {/jpeg_enc_tb/dut/check_next_element}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_zero}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt_gte_16}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_ne_63}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac_neg}
# add wave -noreg {/jpeg_enc_tb/dut/last_comp}
# add wave -noreg {/jpeg_enc_tb/dut/clk}
# add wave -noreg {/jpeg_enc_tb/dut/reset_n}
# add wave -noreg {/jpeg_enc_tb/dut/conv_en}
# add wave -noreg {/jpeg_enc_tb/dut/fb_data}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr}
# add wave -noreg {/jpeg_enc_tb/dut/img_out}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid}
# add wave -noreg {/jpeg_enc_tb/dut/img_done}
# 112 signal(s) traced.
# Waveform file 'untitled.awc' connected to 'e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/wave.asdb'.
run 3 ms
# KERNEL: stopped at time: 3 ms
run 445 ms
# KERNEL: Conversion Done
# RUNTIME: Info: RUNTIME_0068 jpeg_enc_tb.v (118): $finish called.
# KERNEL: Time: 447092970 ns,  Iteration: 0,  Instance: /jpeg_enc_tb,  Process: @ALWAYS#68,105,111_2@.
# KERNEL: stopped at time: 447092970 ns
# VSIM: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work rtl_conversion $dsn/src/jpeg_enc_tb.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Info: VCP2113 Module jpeg_enc found in current working library.
# Pass 2. Processing instantiations.
# Info: VCP2618 jpeg_enc_tb.v : (16, 19): Array size is greater than 2^24 bits: frame_buf reg[7:0]$[2359295:0].
# Pass 3. Processing behavioral statements.
# Info: VCP2618 jpeg_enc_tb.v : (16, 19): Array size is greater than 2^24 bits: frame_buf reg[7:0]$[2359295:0].
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc_tb.v, ln 81).
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: jpeg_enc_tb.
# $root top modules: jpeg_enc_tb.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work rtl_conversion $dsn/src/jpeg_enc.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 175).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 339).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 496).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 642).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 792).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 846).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 991).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1102).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1130).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1163).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1213).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1234).
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# $root top modules: jpeg_enc_tb.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
asim -O5 +access +r jpeg_enc_tb
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# KERNEL: Time resolution set to 1ns.
# ELAB2: Elaboration final pass...
# KERNEL: PLI/VHPI kernel's engine initialization done.
# PLI: Loading library 'D:\APPS\lscc\diamond\3.10_x64\active-hdl\bin\systf.dll'
# ELAB2: Create instances ...
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 1.6 [s]
# SLP: Finished : 1.7 [s]
# SLP: 0 primitives and 54 (100.00%) other processes in SLP
# SLP: 110 (87.30%) signals in SLP and 16 (12.70%) interface signals
# ELAB2: Elaboration final pass complete - time: 1.8 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Lattice Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 10305 kB (elbread=1280 elab2=8874 kernel=151 sdf=0)
# KERNEL: ASDB file was created in location e:\upwork\gnarly_grey\received\jpeg_encoder\rtl_conversion\sim\jpeg_enc_rtl_conversion\src\wave.asdb
#  15:43, 13 March 2018
#  Simulation has been initialized
# Waveform file 'untitled.awc' connected to 'e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/wave.asdb'.
# add wave -noreg {/jpeg_enc_tb/dut/img_out_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_done_reg}
# add wave -noreg {/jpeg_enc_tb/dut/byte_count}
# add wave -noreg {/jpeg_enc_tb/dut/YDU}
# add wave -noreg {/jpeg_enc_tb/dut/UDU}
# add wave -noreg {/jpeg_enc_tb/dut/VDU}
# add wave -noreg {/jpeg_enc_tb/dut/DCT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/ZIG_DU}
# add wave -noreg {/jpeg_enc_tb/dut/QNT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/tmp0}
# add wave -noreg {/jpeg_enc_tb/dut/tmp1}
# add wave -noreg {/jpeg_enc_tb/dut/tmp2}
# add wave -noreg {/jpeg_enc_tb/dut/tmp3}
# add wave -noreg {/jpeg_enc_tb/dut/tmp4}
# add wave -noreg {/jpeg_enc_tb/dut/tmp5}
# add wave -noreg {/jpeg_enc_tb/dut/tmp6}
# add wave -noreg {/jpeg_enc_tb/dut/tmp7}
# add wave -noreg {/jpeg_enc_tb/dut/tmp10}
# add wave -noreg {/jpeg_enc_tb/dut/tmp11}
# add wave -noreg {/jpeg_enc_tb/dut/tmp12}
# add wave -noreg {/jpeg_enc_tb/dut/tmp13}
# add wave -noreg {/jpeg_enc_tb/dut/tmp20}
# add wave -noreg {/jpeg_enc_tb/dut/tmp21}
# add wave -noreg {/jpeg_enc_tb/dut/tmp22}
# add wave -noreg {/jpeg_enc_tb/dut/z1}
# add wave -noreg {/jpeg_enc_tb/dut/z2}
# add wave -noreg {/jpeg_enc_tb/dut/z3}
# add wave -noreg {/jpeg_enc_tb/dut/z4}
# add wave -noreg {/jpeg_enc_tb/dut/z5}
# add wave -noreg {/jpeg_enc_tb/dut/z11}
# add wave -noreg {/jpeg_enc_tb/dut/z13}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_sel}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_idx}
# add wave -noreg {/jpeg_enc_tb/dut/dct_idx_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/DCY}
# add wave -noreg {/jpeg_enc_tb/dut/DCU}
# add wave -noreg {/jpeg_enc_tb/dut/DCV}
# add wave -noreg {/jpeg_enc_tb/dut/diff_DC}
# add wave -noreg {/jpeg_enc_tb/dut/img_x}
# add wave -noreg {/jpeg_enc_tb/dut/img_col}
# add wave -noreg {/jpeg_enc_tb/dut/img_y}
# add wave -noreg {/jpeg_enc_tb/dut/img_row}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done_fl}
# add wave -noreg {/jpeg_enc_tb/dut/qz_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/c_state}
# add wave -noreg {/jpeg_enc_tb/dut/n_state}
# add wave -noreg {/jpeg_enc_tb/dut/b_state}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr_reg}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bc_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_c}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_mask}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/end0pos}
# add wave -noreg {/jpeg_enc_tb/dut/du_e0p}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac0}
# add wave -noreg {/jpeg_enc_tb/dut/ac_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/last_du}
# add wave -noreg {/jpeg_enc_tb/dut/last_du_p}
# add wave -noreg {/jpeg_enc_tb/dut/header_rom}
# add wave -noreg {/jpeg_enc_tb/dut/ydc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvdc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/yac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/zigzag_idx}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_Y}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_UV}
# add wave -noreg {/jpeg_enc_tb/dut/header_tx_done}
# add wave -noreg {/jpeg_enc_tb/dut/inc_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/rst_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/col_max}
# add wave -noreg {/jpeg_enc_tb/dut/row_max}
# add wave -noreg {/jpeg_enc_tb/dut/inc_row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done}
# add wave -noreg {/jpeg_enc_tb/dut/dct_done}
# add wave -noreg {/jpeg_enc_tb/dut/qz_done}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_zero}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_neg}
# add wave -noreg {/jpeg_enc_tb/dut/bit_cnt_gte_8}
# add wave -noreg {/jpeg_enc_tb/dut/byte_out_eq_255}
# add wave -noreg {/jpeg_enc_tb/dut/check_next_element}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_zero}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt_gte_16}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_ne_63}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac_neg}
# add wave -noreg {/jpeg_enc_tb/dut/last_comp}
# add wave -noreg {/jpeg_enc_tb/dut/clk}
# add wave -noreg {/jpeg_enc_tb/dut/reset_n}
# add wave -noreg {/jpeg_enc_tb/dut/conv_en}
# add wave -noreg {/jpeg_enc_tb/dut/fb_data}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr}
# add wave -noreg {/jpeg_enc_tb/dut/img_out}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid}
# add wave -noreg {/jpeg_enc_tb/dut/img_done}
# 112 signal(s) traced.
run 3 ms
# KERNEL: stopped at time: 3 ms
run 445 ms
# KERNEL: Conversion Done
# RUNTIME: Info: RUNTIME_0068 jpeg_enc_tb.v (118): $finish called.
# KERNEL: Time: 447101150 ns,  Iteration: 0,  Instance: /jpeg_enc_tb,  Process: @ALWAYS#68,105,111_2@.
# KERNEL: stopped at time: 447101150 ns
# VSIM: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work rtl_conversion $dsn/src/jpeg_enc.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 175).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 339).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 496).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 642).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 792).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 846).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 991).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1102).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1130).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1163).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1213).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1234).
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# $root top modules: jpeg_enc_tb.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
asim -O5 +access +r jpeg_enc_tb
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# KERNEL: Time resolution set to 1ns.
# ELAB2: Elaboration final pass...
# KERNEL: PLI/VHPI kernel's engine initialization done.
# PLI: Loading library 'D:\APPS\lscc\diamond\3.10_x64\active-hdl\bin\systf.dll'
# ELAB2: Create instances ...
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.1 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 2.0 [s]
# SLP: Finished : 2.2 [s]
# SLP: 0 primitives and 54 (100.00%) other processes in SLP
# SLP: 110 (87.30%) signals in SLP and 16 (12.70%) interface signals
# ELAB2: Elaboration final pass complete - time: 2.7 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Lattice Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 10305 kB (elbread=1280 elab2=8874 kernel=151 sdf=0)
# KERNEL: ASDB file was created in location e:\upwork\gnarly_grey\received\jpeg_encoder\rtl_conversion\sim\jpeg_enc_rtl_conversion\src\wave.asdb
#  17:41, 13 March 2018
#  Simulation has been initialized
# Waveform file 'untitled.awc' connected to 'e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/wave.asdb'.
# add wave -noreg {/jpeg_enc_tb/dut/img_out_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_done_reg}
# add wave -noreg {/jpeg_enc_tb/dut/byte_count}
# add wave -noreg {/jpeg_enc_tb/dut/YDU}
# add wave -noreg {/jpeg_enc_tb/dut/UDU}
# add wave -noreg {/jpeg_enc_tb/dut/VDU}
# add wave -noreg {/jpeg_enc_tb/dut/DCT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/ZIG_DU}
# add wave -noreg {/jpeg_enc_tb/dut/QNT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/tmp0}
# add wave -noreg {/jpeg_enc_tb/dut/tmp1}
# add wave -noreg {/jpeg_enc_tb/dut/tmp2}
# add wave -noreg {/jpeg_enc_tb/dut/tmp3}
# add wave -noreg {/jpeg_enc_tb/dut/tmp4}
# add wave -noreg {/jpeg_enc_tb/dut/tmp5}
# add wave -noreg {/jpeg_enc_tb/dut/tmp6}
# add wave -noreg {/jpeg_enc_tb/dut/tmp7}
# add wave -noreg {/jpeg_enc_tb/dut/tmp10}
# add wave -noreg {/jpeg_enc_tb/dut/tmp11}
# add wave -noreg {/jpeg_enc_tb/dut/tmp12}
# add wave -noreg {/jpeg_enc_tb/dut/tmp13}
# add wave -noreg {/jpeg_enc_tb/dut/tmp20}
# add wave -noreg {/jpeg_enc_tb/dut/tmp21}
# add wave -noreg {/jpeg_enc_tb/dut/tmp22}
# add wave -noreg {/jpeg_enc_tb/dut/z1}
# add wave -noreg {/jpeg_enc_tb/dut/z2}
# add wave -noreg {/jpeg_enc_tb/dut/z3}
# add wave -noreg {/jpeg_enc_tb/dut/z4}
# add wave -noreg {/jpeg_enc_tb/dut/z5}
# add wave -noreg {/jpeg_enc_tb/dut/z11}
# add wave -noreg {/jpeg_enc_tb/dut/z13}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_sel}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_idx}
# add wave -noreg {/jpeg_enc_tb/dut/dct_idx_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/DCY}
# add wave -noreg {/jpeg_enc_tb/dut/DCU}
# add wave -noreg {/jpeg_enc_tb/dut/DCV}
# add wave -noreg {/jpeg_enc_tb/dut/diff_DC}
# add wave -noreg {/jpeg_enc_tb/dut/img_x}
# add wave -noreg {/jpeg_enc_tb/dut/img_col}
# add wave -noreg {/jpeg_enc_tb/dut/img_y}
# add wave -noreg {/jpeg_enc_tb/dut/img_row}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done_fl}
# add wave -noreg {/jpeg_enc_tb/dut/qz_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/c_state}
# add wave -noreg {/jpeg_enc_tb/dut/n_state}
# add wave -noreg {/jpeg_enc_tb/dut/b_state}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr_reg}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bc_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_c}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_mask}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/end0pos}
# add wave -noreg {/jpeg_enc_tb/dut/du_e0p}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac0}
# add wave -noreg {/jpeg_enc_tb/dut/ac_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/last_du}
# add wave -noreg {/jpeg_enc_tb/dut/last_du_p}
# add wave -noreg {/jpeg_enc_tb/dut/header_rom}
# add wave -noreg {/jpeg_enc_tb/dut/ydc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvdc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/yac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/zigzag_idx}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_Y}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_UV}
# add wave -noreg {/jpeg_enc_tb/dut/header_tx_done}
# add wave -noreg {/jpeg_enc_tb/dut/inc_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/rst_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/col_max}
# add wave -noreg {/jpeg_enc_tb/dut/row_max}
# add wave -noreg {/jpeg_enc_tb/dut/inc_row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done}
# add wave -noreg {/jpeg_enc_tb/dut/dct_done}
# add wave -noreg {/jpeg_enc_tb/dut/qz_done}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_zero}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_neg}
# add wave -noreg {/jpeg_enc_tb/dut/bit_cnt_gte_8}
# add wave -noreg {/jpeg_enc_tb/dut/byte_out_eq_255}
# add wave -noreg {/jpeg_enc_tb/dut/check_next_element}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_zero}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt_gte_16}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_ne_63}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac_neg}
# add wave -noreg {/jpeg_enc_tb/dut/last_comp}
# add wave -noreg {/jpeg_enc_tb/dut/clk}
# add wave -noreg {/jpeg_enc_tb/dut/reset_n}
# add wave -noreg {/jpeg_enc_tb/dut/conv_en}
# add wave -noreg {/jpeg_enc_tb/dut/fb_data}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr}
# add wave -noreg {/jpeg_enc_tb/dut/img_out}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid}
# add wave -noreg {/jpeg_enc_tb/dut/img_done}
# 112 signal(s) traced.
run 448 ms
# KERNEL: Conversion Done
# RUNTIME: Info: RUNTIME_0068 jpeg_enc_tb.v (118): $finish called.
# KERNEL: Time: 447109290 ns,  Iteration: 0,  Instance: /jpeg_enc_tb,  Process: @ALWAYS#68,105,111_2@.
# KERNEL: stopped at time: 447109290 ns
# VSIM: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work rtl_conversion $dsn/src/jpeg_enc.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 175).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 339).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 496).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 642).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 792).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 846).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 991).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1102).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1130).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1163).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1213).
# Parameters in case labels, will not check for overlapping labels (e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/jpeg_enc.v, ln 1234).
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# $root top modules: jpeg_enc_tb.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
asim -O5 +access +r jpeg_enc_tb
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# KERNEL: Time resolution set to 1ns.
# ELAB2: Elaboration final pass...
# KERNEL: PLI/VHPI kernel's engine initialization done.
# PLI: Loading library 'D:\APPS\lscc\diamond\3.10_x64\active-hdl\bin\systf.dll'
# ELAB2: Create instances ...
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.1 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 1.6 [s]
# SLP: Finished : 1.7 [s]
# SLP: 0 primitives and 54 (100.00%) other processes in SLP
# SLP: 110 (87.30%) signals in SLP and 16 (12.70%) interface signals
# ELAB2: Elaboration final pass complete - time: 1.9 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Lattice Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 10305 kB (elbread=1280 elab2=8874 kernel=151 sdf=0)
# KERNEL: ASDB file was created in location e:\upwork\gnarly_grey\received\jpeg_encoder\rtl_conversion\sim\jpeg_enc_rtl_conversion\src\wave.asdb
#  17:53, 13 March 2018
#  Simulation has been initialized
# Waveform file 'untitled.awc' connected to 'e:/upwork/gnarly_grey/received/jpeg_encoder/rtl_conversion/sim/jpeg_enc_rtl_conversion/src/wave.asdb'.
# add wave -noreg {/jpeg_enc_tb/dut/img_out_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid_reg}
# add wave -noreg {/jpeg_enc_tb/dut/img_done_reg}
# add wave -noreg {/jpeg_enc_tb/dut/byte_count}
# add wave -noreg {/jpeg_enc_tb/dut/YDU}
# add wave -noreg {/jpeg_enc_tb/dut/UDU}
# add wave -noreg {/jpeg_enc_tb/dut/VDU}
# add wave -noreg {/jpeg_enc_tb/dut/DCT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/ZIG_DU}
# add wave -noreg {/jpeg_enc_tb/dut/QNT_DU}
# add wave -noreg {/jpeg_enc_tb/dut/tmp0}
# add wave -noreg {/jpeg_enc_tb/dut/tmp1}
# add wave -noreg {/jpeg_enc_tb/dut/tmp2}
# add wave -noreg {/jpeg_enc_tb/dut/tmp3}
# add wave -noreg {/jpeg_enc_tb/dut/tmp4}
# add wave -noreg {/jpeg_enc_tb/dut/tmp5}
# add wave -noreg {/jpeg_enc_tb/dut/tmp6}
# add wave -noreg {/jpeg_enc_tb/dut/tmp7}
# add wave -noreg {/jpeg_enc_tb/dut/tmp10}
# add wave -noreg {/jpeg_enc_tb/dut/tmp11}
# add wave -noreg {/jpeg_enc_tb/dut/tmp12}
# add wave -noreg {/jpeg_enc_tb/dut/tmp13}
# add wave -noreg {/jpeg_enc_tb/dut/tmp20}
# add wave -noreg {/jpeg_enc_tb/dut/tmp21}
# add wave -noreg {/jpeg_enc_tb/dut/tmp22}
# add wave -noreg {/jpeg_enc_tb/dut/z1}
# add wave -noreg {/jpeg_enc_tb/dut/z2}
# add wave -noreg {/jpeg_enc_tb/dut/z3}
# add wave -noreg {/jpeg_enc_tb/dut/z4}
# add wave -noreg {/jpeg_enc_tb/dut/z5}
# add wave -noreg {/jpeg_enc_tb/dut/z11}
# add wave -noreg {/jpeg_enc_tb/dut/z13}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_sel}
# add wave -noreg {/jpeg_enc_tb/dut/dct_comp_idx}
# add wave -noreg {/jpeg_enc_tb/dut/dct_idx_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/DCY}
# add wave -noreg {/jpeg_enc_tb/dut/DCU}
# add wave -noreg {/jpeg_enc_tb/dut/DCV}
# add wave -noreg {/jpeg_enc_tb/dut/diff_DC}
# add wave -noreg {/jpeg_enc_tb/dut/img_x}
# add wave -noreg {/jpeg_enc_tb/dut/img_col}
# add wave -noreg {/jpeg_enc_tb/dut/img_y}
# add wave -noreg {/jpeg_enc_tb/dut/img_row}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/img_col_p_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl1}
# add wave -noreg {/jpeg_enc_tb/dut/col_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/row_cnt_fl2}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done_fl}
# add wave -noreg {/jpeg_enc_tb/dut/qz_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/c_state}
# add wave -noreg {/jpeg_enc_tb/dut/n_state}
# add wave -noreg {/jpeg_enc_tb/dut/b_state}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr_reg}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bc_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/wb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/wb_c}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_mask}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_buf}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bb_tmp}
# add wave -noreg {/jpeg_enc_tb/dut/cb_bit_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/end0pos}
# add wave -noreg {/jpeg_enc_tb/dut/du_e0p}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac0}
# add wave -noreg {/jpeg_enc_tb/dut/ac_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/last_du}
# add wave -noreg {/jpeg_enc_tb/dut/last_du_p}
# add wave -noreg {/jpeg_enc_tb/dut/header_rom}
# add wave -noreg {/jpeg_enc_tb/dut/ydc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvdc_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/yac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/uvac_ht_rom}
# add wave -noreg {/jpeg_enc_tb/dut/zigzag_idx}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_Y}
# add wave -noreg {/jpeg_enc_tb/dut/fdtbl_UV}
# add wave -noreg {/jpeg_enc_tb/dut/header_tx_done}
# add wave -noreg {/jpeg_enc_tb/dut/inc_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/rst_img_col_p}
# add wave -noreg {/jpeg_enc_tb/dut/col_max}
# add wave -noreg {/jpeg_enc_tb/dut/row_max}
# add wave -noreg {/jpeg_enc_tb/dut/inc_row_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/load_du_done}
# add wave -noreg {/jpeg_enc_tb/dut/dct_done}
# add wave -noreg {/jpeg_enc_tb/dut/qz_done}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_zero}
# add wave -noreg {/jpeg_enc_tb/dut/diff_dc_neg}
# add wave -noreg {/jpeg_enc_tb/dut/bit_cnt_gte_8}
# add wave -noreg {/jpeg_enc_tb/dut/byte_out_eq_255}
# add wave -noreg {/jpeg_enc_tb/dut/check_next_element}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_zero}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_idx}
# add wave -noreg {/jpeg_enc_tb/dut/inc_ac0_cnt}
# add wave -noreg {/jpeg_enc_tb/dut/ac0_cnt_gte_16}
# add wave -noreg {/jpeg_enc_tb/dut/e0p_ne_63}
# add wave -noreg {/jpeg_enc_tb/dut/du_ac_neg}
# add wave -noreg {/jpeg_enc_tb/dut/last_comp}
# add wave -noreg {/jpeg_enc_tb/dut/clk}
# add wave -noreg {/jpeg_enc_tb/dut/reset_n}
# add wave -noreg {/jpeg_enc_tb/dut/conv_en}
# add wave -noreg {/jpeg_enc_tb/dut/fb_data}
# add wave -noreg {/jpeg_enc_tb/dut/fb_addr}
# add wave -noreg {/jpeg_enc_tb/dut/img_out}
# add wave -noreg {/jpeg_enc_tb/dut/img_valid}
# add wave -noreg {/jpeg_enc_tb/dut/img_done}
# 112 signal(s) traced.
run 448 ms
# KERNEL: Conversion Done
# RUNTIME: Info: RUNTIME_0068 jpeg_enc_tb.v (118): $finish called.
# KERNEL: Time: 447110830 ns,  Iteration: 0,  Instance: /jpeg_enc_tb,  Process: @ALWAYS#68,105,111_2@.
# KERNEL: stopped at time: 447110830 ns
# VSIM: Simulation has finished. There are no more test vectors to simulate.
